{
    "components": {
        "schemas": {
            "Artifact": {
                "description": "Representation of an API artifact.",
                "properties": {
                    "attributes": {
                        "additionalProperties": {
                            
                        },
                        "description": "Map of field IDs to their corresponding values. On creating or updating artifacts, there may or may not be default values used for fields not provided here.",
                        "example": {
                            "formatted_id": "US123",
                            "is_closed": false,
                            "location": "http://my.repo.com/artifacts/123",
                            "modified_at": "2023-04-01T12:02:01.210Z",
                            "priority": "p_1",
                            "revision": "a3f67e2b5f1b5fda5dee3225b644525f",
                            "summary": "Lorem ipsum"
                        },
                        "type": "object"
                    },
                    "id": {
                        "description": "The unique internal ID used to retrieve the artifact. Required when retrieving existing artifacts",
                        "example": 12345,
                        "readOnly": true,
                        "type": "string"
                    },
                    "project": {
                        "description": "The ID of the project the artifact belongs to.",
                        "example": "PROJ-A",
                        "type": "string"
                    },
                    "type": {
                        "description": "The ID of the type associated with the artifact.",
                        "example": "Defect",
                        "type": "string"
                    }
                },
                "required": [
                    "attributes",
                    "id",
                    "project",
                    "type"
                ]
            },
            "ArtifactCapabilities": {
                "description": "Represents the capabilities of an artifact type",
                "properties": {
                    "create_artifact_supported": {
                        "default": "false",
                        "description": "Indicates whether the artifact type supports creating artifacts",
                        "type": [
                            "boolean",
                            "null"
                        ]
                    },
                    "update_artifact_supported": {
                        "default": "false",
                        "description": "Indicates whether the artifact type supports updating artifacts",
                        "type": [
                            "boolean",
                            "null"
                        ]
                    }
                }
            },
            "ArtifactField": {
                "description": "Describes the properties of a field within an artifact.",
                "properties": {
                    "available_on_create": {
                        "default": "false",
                        "description": "A boolean value indicating whether the field is available to write during artifact creation.",
                        "example": true,
                        "type": [
                            "boolean",
                            "null"
                        ]
                    },
                    "id": {
                        "description": "The unique and stable identifier for the artifact field.",
                        "example": "field_id_123",
                        "type": "string"
                    },
                    "label": {
                        "description": "The user-friendly label used to represent the field.",
                        "example": "Reproduction Steps",
                        "type": "string"
                    },
                    "read_only": {
                        "default": "false",
                        "description": "A boolean value indicating whether the field is read-only or not.",
                        "example": true,
                        "type": [
                            "boolean",
                            "null"
                        ]
                    },
                    "required": {
                        "default": "false",
                        "description": "A boolean value indicating whether the field is required or not.",
                        "example": true,
                        "type": [
                            "boolean",
                            "null"
                        ]
                    },
                    "semantic": {
                        "description": "A descriptor used to specify the semantic association of a field. When provided, it signifies that this field has a specific semantic meaning within the system, allowing for clearer data representation and interpretation.",
                        "enum": [
                            "SUMMARY",
                            "FORMATTED_ID",
                            "REVISION",
                            "STATUS",
                            "MODIFIED",
                            "CREATED",
                            "LOCATION",
                            null
                        ],
                        "example": "SUMMARY",
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "type": {
                        "description": "The categorization of the field based on predefined types.",
                        "enum": [
                            "STRING",
                            "SINGLE_SELECT",
                            "DATE_TIME",
                            "URI",
                            "BOOLEAN"
                        ],
                        "example": "STRING",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "label",
                    "type"
                ]
            },
            "ArtifactSchema": {
                "description": "Describes the properties and structure of an artifact.",
                "properties": {
                    "fields": {
                        "description": "Collection of field definitions providing metadata, constraints, and semantic for the artifact.",
                        "example": [
                            {
                                "id": "id",
                                "label": "Id",
                                "type": "STRING",
                                "semantic": "ID",
                                "read_only": true
                            },
                            {
                                "id": "formatted_id",
                                "label": "Formatted Id",
                                "type": "STRING",
                                "semantic": "FORMATTED_ID",
                                "read_only": true
                            },
                            {
                                "id": "summary",
                                "label": "Summary",
                                "type": "STRING",
                                "semantic": "SUMMARY"
                            },
                            {
                                "id": "description",
                                "label": "Description",
                                "type": "STRING"
                            },
                            {
                                "id": "status",
                                "label": "Status",
                                "type": "SINGLE_SELECT"
                            },
                            {
                                "id": "closed",
                                "label": "Closed",
                                "type": "BOOLEAN"
                            },
                            {
                                "id": "location",
                                "label": "Location",
                                "type": "URI",
                                "semantic": "LOCATION",
                                "read_only": true
                            },
                            {
                                "id": "modified_at",
                                "label": "Last Modified At",
                                "type": "DATE_TIME",
                                "semantic": "MODIFIED",
                                "read_only": true
                            },
                            {
                                "id": "created_at",
                                "label": "Created At",
                                "type": "DATE_TIME",
                                "semantic": "CREATED",
                                "read_only": true
                            }
                        ],
                        "items": {
                            "$ref": "#/components/schemas/ArtifactField"
                        },
                        "type": [
                            "array",
                            "null"
                        ]
                    }
                }
            },
            "Option": {
                "description": "Represents an available or selected option for a single or multi-select field.",
                "properties": {
                    "id": {
                        "description": "The ID of the option must be unique for its associating field across the repository.",
                        "type": "string"
                    },
                    "label": {
                        "description": "The label of the option should be unique for its associating field across the repository to avoid ambiguity.",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "label"
                ]
            },
            "PagedOptions": {
                "description": "Represents a page of options.",
                "properties": {
                    "items": {
                        "description": "The items for this page",
                        "items": {
                            "$ref": "#/components/schemas/Option"
                        },
                        "type": "array"
                    },
                    "next_cursor": {
                        "description": "The cursor for the next page, or not provided if the last element is included in the payload",
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "items"
                ]
            },
            "PagedPartialArtifacts": {
                "description": "Artifact search response",
                "properties": {
                    "items": {
                        "description": "The items for this page",
                        "items": {
                            "$ref": "#/components/schemas/PartialArtifact"
                        },
                        "type": "array"
                    },
                    "next_cursor": {
                        "description": "The cursor for the next page, or not provided if the last element is included in the payload",
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "items"
                ]
            },
            "PartialArtifact": {
                "properties": {
                    "attributes": {
                        "additionalProperties": {
                            
                        },
                        "description": "Map of field IDs to their corresponding values.",
                        "example": {
                            "formatted_id": "US123",
                            "id": "1234567",
                            "revision": "a3f67e2b5f1b5fda5dee3225b644525f",
                            "summary": "Lorem ipsum"
                        },
                        "type": "object"
                    },
                    "id": {
                        "description": "The unique internal ID used to retrieve the artifact.",
                        "example": 12345,
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "attributes"
                ]
            },
            "Problem": {
                "description": "Problem payload schema complying with RFC 7807",
                "properties": {
                    "detail": {
                        "description": "An English explanation specific to this occurrence of the problem with advice on how to proceed. Suitable for engineers, ",
                        "example": "description for the error situation",
                        "type": "string"
                    },
                    "instance": {
                        "description": "A URI reference that identifies the specific occurrence of the problem.",
                        "example": "/some/uri-reference#specific-occurrence-context",
                        "format": "uri-reference",
                        "type": "string"
                    },
                    "status": {
                        "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                        "format": "int32",
                        "maximum": 600,
                        "minimum": 100,
                        "type": "integer"
                    },
                    "title": {
                        "description": "A short English summary of the problem type suitable for engineers.",
                        "example": "title for the error situation",
                        "type": "string"
                    },
                    "type": {
                        "description": "A URI reference that uniquely identifies the problem type only in the context of the provided API. As opposed to the specification in RFC-7807, URI's are not globally unique for the problem type nor can they be dereferenced.",
                        "example": "/some/uri-reference",
                        "format": "uri-reference",
                        "type": "string"
                    }
                },
                "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                ]
            }
        },
        "securitySchemes": {
            "api-key": {
                "scheme": "bearer",
                "type": "http"
            }
        }
    },
    "info": {
        "description": "Defines a REST API that a repository can implement to enable integration with select Planview applications",
        "title": "Planview Universal Connector API",
        "version": "0.34"
    },
    "openapi": "3.1.0",
    "paths": {
        "/": {
            "get": {
                "description": "Validate that a connection can be successfully established to the repository and all of its services are running normally.",
                "operationId": "validate",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                
                            }
                        },
                        "description": "Successful connection"
                    },
                    "401": {
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": "Not authenticated"
                    },
                    "500": {
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": "Unable to process request"
                    }
                },
                "summary": "Validate Connection",
                "tags": [
                    "repository"
                ]
            }
        },
        "/artifact-fields": {
            "get": {
                "description": "Returns the schema of a specified artifact, encompassing fields, metadata, and constraints. Each schema is unique to a particular project and artifact type.",
                "operationId": "retrieveArtifactFields",
                "parameters": [
                    {
                        "name": "project",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArtifactSchema"
                                }
                            }
                        },
                        "description": "Fields associated with an artifact, specified by its project and type."
                    },
                    "400": {
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": "No project or type with the provided id exists"
                    },
                    "401": {
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": "Not authenticated"
                    }
                },
                "summary": "Fetch artifact schema details",
                "tags": [
                    "schema"
                ]
            }
        },
        "/artifact-fields/{field-id}/options": {
            "get": {
                "description": "Fetch available options for the provided field. The field must be a single select field.",
                "operationId": "retrieveOptions",
                "parameters": [
                    {
                        "name": "field-id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagedOptions"
                                }
                            }
                        },
                        "description": "Successful retrieval of options for the provided field."
                    },
                    "400": {
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": "The project or type with the provided id is missing or invalid."
                    },
                    "401": {
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": "Not authenticated"
                    },
                    "404": {
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": "No field with the provided id exists."
                    }
                },
                "summary": "Fetch available options for the provided field",
                "tags": [
                    "schema"
                ]
            }
        },
        "/artifact-types": {
            "get": {
                "description": "Return a page of available artifact types in the repository. A 'cursor' from a previous page can be supplied to get the next page.",
                "operationId": "getTypes",
                "parameters": [
                    {
                        "name": "project",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagedOptions"
                                }
                            }
                        },
                        "description": "A page of artifact type options."
                    },
                    "400": {
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": "An invalid parameter was supplied."
                    },
                    "401": {
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": "Not authenticated"
                    }
                },
                "summary": "Get a Page of Artifact Types",
                "tags": [
                    "scope"
                ]
            }
        },
        "/artifacts": {
            "get": {
                "description": "Searches for artifacts matching the query parameters. Artifacts must be ordered by the modified_at value, with most recently modified first. A 'cursor' from a previous page can be supplied to get the next page.",
                "operationId": "searchArtifacts",
                "parameters": [
                    {
                        "name": "project",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagedPartialArtifacts"
                                }
                            }
                        },
                        "description": "The query parameters are valid and search results returned."
                    },
                    "400": {
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": "The query parameters are not valid. This includes non-existing project and type values."
                    },
                    "401": {
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": "Not authenticated"
                    }
                },
                "summary": "Search Artifact",
                "tags": [
                    "artifact"
                ]
            },
            "post": {
                "description": "Creates a new artifact with the provided data and returns the unique and stable ID of the created artifact. The ID may only contain alphanumeric characters, dashes and underscores. The artifact must be fully created in the target repository before sending a successful response.",
                "operationId": "createArtifact",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Artifact"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Artifact created",
                        "headers": {
                            "Location": {
                                "description": "The id of the created artifact. This can either be a fully qualified URL\n(e.g. https://myadapter.myhost.com/artifacts/123), a relative URL (e.g. /artifacts/123)\nor just the id (e.g. 123).\n",
                                "schema": {
                                    
                                },
                                "style": "simple"
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": "The provided artifact payload is not valid"
                    },
                    "401": {
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": "Not authenticated"
                    }
                },
                "summary": "Create Artifact",
                "tags": [
                    "artifact"
                ]
            }
        },
        "/artifacts/{id}": {
            "get": {
                "description": "Retrieves an artifact with the provided artifact ID. IDs may only contain alphanumeric characters, dashes and underscores.",
                "operationId": "retrieveArtifact",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Artifact"
                                }
                            }
                        },
                        "description": "Artifact exists and is returned"
                    },
                    "400": {
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": "The provided artifact id is not valid"
                    },
                    "401": {
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": "Not authenticated"
                    },
                    "404": {
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": "No artifact with the provided id exists"
                    }
                },
                "summary": "Retrieve Artifact",
                "tags": [
                    "artifact"
                ]
            },
            "patch": {
                "description": "Updates an artifact of the provided artifact ID with the provided data.",
                "operationId": "updateArtifact",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Artifact"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Artifact exists and is updated"
                    },
                    "400": {
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": "The provided artifact id or artifact payload is not valid"
                    },
                    "401": {
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": "Not authenticated"
                    },
                    "404": {
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": "No artifact with the provided id exists"
                    }
                },
                "summary": "Update Artifact",
                "tags": [
                    "artifact"
                ]
            }
        },
        "/capabilities": {
            "get": {
                "description": "Retrieves the capabilities of a specific artifact type in a given project.",
                "operationId": "getArtifactCapabilities",
                "parameters": [
                    {
                        "name": "project",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArtifactCapabilities"
                                }
                            }
                        },
                        "description": "Artifact capabilities for the given project and type."
                    },
                    "400": {
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": "No project or type with the provided id exists"
                    },
                    "401": {
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": "Not authenticated"
                    }
                },
                "summary": "Retrieve Artifact Type Capabilities",
                "tags": [
                    "capability"
                ]
            }
        },
        "/projects": {
            "get": {
                "description": "Return a page of available projects in the repository. A 'cursor' from a previous page can be supplied to get the next page.",
                "operationId": "getProjects",
                "parameters": [
                    {
                        "name": "cursor",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagedOptions"
                                }
                            }
                        },
                        "description": "A page of project options."
                    },
                    "400": {
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": "An invalid parameter was supplied."
                    },
                    "401": {
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": "Not authenticated"
                    }
                },
                "summary": "Get a Page of Projects",
                "tags": [
                    "scope"
                ]
            }
        }
    },
    "security": [
        {
            "api-key": [
                
            ]
        }
    ],
    "servers": [
		{
			"url": "http://127.1.1.1:9099"
		},
    	{
    		"url": "http://localhost:8000/TestAPI"
    	}

    ],
    "tags": [
        {
            "name": "repository"
        },
        {
            "name": "scope"
        },
        {
            "name": "schema"
        },
        {
            "name": "artifact"
        },
        {
            "name": "capability"
        },
        {
            "name": "in development"
        }
    ]
}
